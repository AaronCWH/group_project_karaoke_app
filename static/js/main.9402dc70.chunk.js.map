{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","API.js","API2.js","screen/MainScreen.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","API","axios","create","baseURL","headers","API2","MainScreen","props","res","useState","songDetails","setSongDetails","a","get","lyrics","console","log","data","response","song","referents","onClick","length","full_title","src","header_image_thumbnail_url","alt","header_image_url","media","url","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAAe,I,YCwBAA,ICZAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,+CCMCQ,EAXHC,IAAMC,OAAQ,CACtBC,QAAQ,iCACRC,QAAS,CACL,kBAAmB,wBACnB,iBAAkB,qDAClB,cAAiB,6ECEVC,EAPFJ,IAAMC,OAAQ,CACvBC,QAAQ,0BACRC,QAAS,CACD,cAAiB,6ECwEdE,MAvEf,SAAoBC,GAChB,IAqB8BC,EArB9B,EAA8BC,mBAAS,GAAvC,mBACA,GADA,UACsCA,mBAAS,KAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAFuB,4CAIvB,8BAAAC,EAAA,sEACyBZ,EAAIa,IAAJ,iBADzB,OACUC,EADV,OAGIC,QAAQC,IAAK,gBAAiBF,GACvBG,EAAQH,EAARG,KACPN,EAAeM,EAAKC,SAASC,MALjC,4CAJuB,kEAYvB,4BAAAP,EAAA,sEAC4BP,EAAKQ,IAAL,4BAD5B,OACUO,EADV,OAGIL,QAAQC,IAAK,kBAAmBI,GAHpC,4CAZuB,sBAwDvB,OACI,qCAEA,qBAAIC,QA3De,2CA2DnB,uCArC0Bb,EAsCqBE,EArC7B,IAAfF,EAAIc,OACI,KAKP,qCAEI,oDAAuBd,EAAIe,cAE3B,6CACA,qBAAKC,IAAKhB,EAAIiB,2BAA4BC,IAAK,KAG/C,gDACA,qBAAKF,IAAOhB,EAAImB,iBAAkBD,IAAI,KAGtC,6CACA,uBAAOF,IAAKhB,EAAIoB,MAAM,GAAGC,IAAzB,kBACA,uBAAOL,IAAI,4CAAX,mBAIA,2DAA8BhB,EAAIsB,QAIlC,wCAAWtB,EAAIoB,MAAM,GAAGC,cAYhC,oBAAIR,QA/De,2CA+DnB,sDC9DRU,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,sCACA,cAAC,EAAD,OAEFC,SAASC,eAAe,SAM1B5C,M","file":"static/js/main.9402dc70.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\r\n\r\nconst API = axios.create ({\r\n    baseURL:\"https://genius.p.rapidapi.com/\",\r\n    headers: {\r\n        'x-rapidapi-host': 'genius.p.rapidapi.com',\r\n        'x-rapidapi-key': '8f6a805d32msh0745f29a4cf83a2p134cadjsnb38ffe05207e',\r\n        'Authorization': 'Bearer NshdscyEkgVUKTlQbQ3NSsPvb6mR2Mgrq97tYIxKMfkctJ69kGSrB5d3PKn3ihq3'\r\n    }\r\n});\r\n\r\n\r\n\r\nexport default API;","import axios from 'axios';\r\n\r\nconst API2 = axios.create ({\r\n    baseURL:\"https://api.genius.com/\",\r\n    headers: {\r\n            'Authorization': 'Bearer M9Gs9tNh-Dm-dt_TEZkCgE8sGja-T94unluSwahQHrij5U00y4ZseV5CuP6oO98-'\r\n        }\r\n})\r\n\r\nexport default API2;","import react from 'react';\r\nimport {useState} from 'react';\r\nimport { render } from 'react-dom';\r\nimport API from \"../API\";\r\nimport API2 from \"../API2\";\r\n\r\nfunction MainScreen(props) {\r\n    const [songNumber, setSong] = useState(1);\r\n    const [songDetails, setSongDetails] = useState([]);\r\n\r\n    async function retrieveLyrics(){\r\n        const lyrics = await API.get(`/songs/378195`);\r\n        // need to adjust song id here^ according to whatever song user selects\r\n        console.log (\"inside lyrics\", lyrics);\r\n        const {data} = lyrics;\r\n        setSongDetails(data.response.song)\r\n    }\r\n\r\n    async function retrieveReferents(){\r\n        const referents = await API2.get(`referents?song_id=378195`);\r\n        //same as above ^ adjust song id here ^\r\n        console.log (\"inside refernts\", referents);\r\n    }\r\n\r\n    async function retrieveSearchFunction(){\r\n        \r\n    }\r\n\r\n    const renderLyricsResponse = (res) => {\r\n        if(res.length === 0){\r\n            return null;\r\n        } ;\r\n\r\n        return (\r\n\r\n            <>\r\n\r\n                <h1>Song's Full Title {res.full_title}</h1>\r\n\r\n                <h1>Album Image</h1>\r\n                <img src={res.header_image_thumbnail_url} alt =''/>\r\n                {/* returns image link so use img tag */}\r\n\r\n                <h1>Album Image 2 </h1>\r\n                <img src = {res.header_image_url} alt=''/>\r\n                {/* returns image link so use img tag */}\r\n\r\n                <h1>Music Video</h1>\r\n                <video src={res.media[0].url}>Test</video>\r\n                <video src=\"https://www.youtube.com/embed/2vjPBrBU-TM\">Test2</video>\r\n\r\n                {/* just returns a URL..  have to try i-frames maybe?*/}\r\n\r\n                <h1>Attemping to draw lyrics {res.path}</h1>\r\n\r\n                {/* returns me a path.. not sure what to do with this.. Maybe use API.get and insert path?? */}\r\n                \r\n                <h1>Album {res.media[0].url}</h1>\r\n\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n\r\n        <h1 onClick= {retrieveLyrics}> \r\n        API.get(`/songs/378195`) {renderLyricsResponse(songDetails)}\r\n        </h1>\r\n\r\n        <h2 onClick = {retrieveReferents}>\r\n            API2.get(`referents?song_id=378195`)\r\n        </h2>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainScreen;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport MainScreen from './screen/MainScreen'\n\nReactDOM.render(\n  <React.StrictMode>\n    <h1>TEST</h1>\n    <MainScreen />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}